name: TurnOnServerCron

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #  branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Start at the end of each workday.
  schedule:
    # 5:00 PM M-F (Tokyo time): https://crontab.guru/#0_8_*_*_1-5
    - cron: '0 8 * * 1-5'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This workflow contains a single job called "build"
  build:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Below this are each of the steps that are run
    steps:

     # Name of step
      - name: Start AWS EC2
        # Run AWS Command on the GitHub Hosted runner which starts the instance using AWS authentication stored in GitHub Secrets (see below how to add)
        run: |
          aws ec2 start-instances --instance-ids ${{ secrets.AWS_EC2_INSTANCE_ID }}
          aws ec2 wait instance-running --instance-ids ${{ secrets.AWS_EC2_INSTANCE_ID }}
          public_ip=$(aws ec2 describe-instances --instance-ids ${{ secrets.AWS_ROUTE53_HOSTED_ZONE_ID }} --query 'Reservations[0].Instances[0].PublicIpAddress' --output text)
          aws route53 change-resource-record-sets --hosted-zone-id ${{ secrets.AWS_ROUTE53_HOSTED_ZONE_ID }} --change-batch "{\"Comment\":\"string\","Changes\":[{\"Action\":\"UPSERT\",\"ResourceRecordSet\":{\"Name\": \"${{ secrets.RECORD_NAME }}\",\"Type\":\"A\",\"TTL\":300,\"ResourceRecords\":[{\"Value\":\"$public_ip\"}]}}]}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
